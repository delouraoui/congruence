(set-logic QF_UF)
(set-info :status unsat)
(set-info :source | Benchmark generated by veriT |)
(set-info :smt-lib-version 2.0)
(declare-sort U 0)
(declare-sort I 0)
(declare-fun op (I I) I)
(declare-fun e2 () I)
(assert (or
  (=
    (op (op (op e2 e2) e2) (op e2 e2))
    (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op e2 e2)))))
  (not (= (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op e2 e2))) (op e2 e2)))))
(assert (or
  (= (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2))))
  (not (= e2 (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2))))))
(assert (or
  (= (op (op e2 e2) e2) (op (op e2 e2) (op (op e2 e2) (op (op e2 e2) e2))))
  (not (= (op (op e2 e2) (op (op e2 e2) e2)) e2))))
(assert (or (not (= (op e2 (op e2 e2)) e2)) (= (op e2 (op e2 (op e2 e2))) (op e2 e2))))
(assert (or
  (= (op (op (op e2 e2) (op e2 e2)) (op (op e2 e2) (op e2 e2))) (op (op e2 e2) (op e2 e2)))
  (not (= (op (op e2 e2) (op e2 e2)) (op e2 e2)))))
(assert (or
  (not (= (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))
  (=
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2))
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))))
(assert (or
  (not (= (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))
  (= (op (op (op (op e2 e2) e2) e2) (op (op e2 e2) e2)) (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (or
  (not (= (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))
  (= (op e2 (op (op (op e2 e2) e2) e2)) (op e2 (op (op e2 e2) e2)))))
(assert (or
  (not (= (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))
  (= (op (op e2 e2) (op (op e2 e2) e2)) (op (op e2 e2) (op (op (op e2 e2) e2) e2)))))
(assert (or
  (not (= (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))
  (= (op (op (op e2 e2) e2) (op (op e2 e2) e2)) (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (or
  (not (= (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))
  (=
    (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op e2 e2)))
    (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or
  (not (= (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))
  (= (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2)) (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (or
  (= (op (op (op e2 e2) e2) e2) (op (op (op (op e2 e2) e2) e2) e2))
  (not (= (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (or
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op (op e2 e2) e2) e2) (op e2 e2)))
  (not (= (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (or
  (not (= (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))
  (= (op (op (op e2 e2) e2) (op (op e2 e2) e2)) (op (op (op (op e2 e2) e2) e2) (op (op e2 e2) e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) e2) (op e2 e2)))
  (=
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2))
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) e2) (op e2 e2)))
  (= (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2)) (op (op (op (op e2 e2) e2) e2) (op e2 e2)))))
(assert (or (not (= (op (op (op e2 e2) e2) e2) (op e2 e2))) (= (op e2 (op (op (op e2 e2) e2) e2)) (op e2 (op e2 e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) e2) (op e2 e2)))
  (= (op (op e2 e2) (op (op (op e2 e2) e2) e2)) (op (op e2 e2) (op e2 e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) e2) (op e2 e2)))
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) e2) (op e2 e2)))
  (=
    (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) (op e2 e2)))
    (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or
  (not (= (op (op (op e2 e2) e2) e2) (op e2 e2)))
  (= (op (op e2 e2) (op (op (op e2 e2) e2) e2)) (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (or (= (op (op e2 e2) e2) (op (op (op (op e2 e2) e2) e2) e2)) (not (= (op (op (op e2 e2) e2) e2) (op e2 e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) e2) (op e2 e2)))
  (= (op (op e2 e2) (op e2 e2)) (op (op (op (op e2 e2) e2) e2) (op e2 e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) e2) (op e2 e2)))
  (= (op (op e2 e2) (op (op e2 e2) e2)) (op (op (op (op e2 e2) e2) e2) (op (op e2 e2) e2)))))
(assert (or
  (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))
  (not (= (op (op e2 e2) e2) (op e2 e2)))))
(assert (or
  (= (op (op (op (op e2 e2) e2) e2) (op (op e2 e2) e2)) (op (op (op (op e2 e2) e2) e2) (op e2 e2)))
  (not (= (op (op e2 e2) e2) (op e2 e2)))))
(assert (or (= (op e2 (op e2 e2)) (op e2 (op (op e2 e2) e2))) (not (= (op (op e2 e2) e2) (op e2 e2)))))
(assert (or (= (op (op e2 e2) (op (op e2 e2) e2)) (op (op e2 e2) (op e2 e2))) (not (= (op (op e2 e2) e2) (op e2 e2)))))
(assert (or
  (not (= (op (op e2 e2) e2) (op e2 e2)))
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op (op e2 e2) e2)))))
(assert (or
  (= (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op e2 e2))) (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))))
  (not (= (op (op e2 e2) e2) (op e2 e2)))))
(assert (or
  (= (op (op e2 e2) (op (op (op e2 e2) e2) e2)) (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))
  (not (= (op (op e2 e2) e2) (op e2 e2)))))
(assert (or (= (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)) (not (= (op (op e2 e2) e2) (op e2 e2)))))
(assert (or (not (= (op (op e2 e2) e2) (op e2 e2))) (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) (op e2 e2)))))
(assert (or
  (= (op (op e2 e2) (op (op e2 e2) e2)) (op (op (op e2 e2) e2) (op (op e2 e2) e2)))
  (not (= (op (op e2 e2) e2) (op e2 e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))
  (=
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2)))
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))
  (=
    (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) (op e2 e2)))
    (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))
  (= (op e2 (op (op (op e2 e2) e2) e2)) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))
  (= (op (op e2 e2) (op (op (op e2 e2) e2) e2)) (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))
  (= (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op e2 e2))) (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))
  (=
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2)))
    (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))
  (=
    (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2))
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))
  (= (op (op (op (op e2 e2) e2) (op e2 e2)) e2) (op (op (op (op e2 e2) e2) e2) e2))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))
  (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)) (op (op (op (op e2 e2) e2) e2) (op e2 e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))
  (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)) (op (op (op (op e2 e2) e2) e2) (op (op e2 e2) e2)))))
(assert (or (not (= (op (op e2 e2) e2) e2)) (= (op e2 (op (op e2 e2) e2)) (op (op (op e2 e2) e2) e2))))
(assert (or
  (not (= (op (op e2 e2) e2) e2))
  (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) e2))))
(assert (or
  (not (= (op (op e2 e2) e2) e2))
  (= (op (op (op (op e2 e2) e2) e2) (op (op e2 e2) e2)) (op (op (op (op e2 e2) e2) e2) e2))))
(assert (or (not (= (op (op e2 e2) e2) e2)) (= (op e2 (op (op e2 e2) e2)) (op e2 e2))))
(assert (or (not (= (op (op e2 e2) e2) e2)) (= (op (op e2 e2) e2) (op (op e2 e2) (op (op e2 e2) e2)))))
(assert (or (not (= (op (op e2 e2) e2) e2)) (= (op (op (op e2 e2) e2) (op (op e2 e2) e2)) (op (op (op e2 e2) e2) e2))))
(assert (or
  (not (= (op (op e2 e2) e2) e2))
  (= (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op e2 e2))) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or
  (not (= (op (op e2 e2) e2) e2))
  (= (op e2 (op (op (op e2 e2) e2) e2)) (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (or (not (= (op (op e2 e2) e2) e2)) (= (op (op (op e2 e2) e2) e2) (op e2 e2))))
(assert (or (not (= (op (op e2 e2) e2) e2)) (= (op (op (op e2 e2) e2) (op e2 e2)) (op e2 (op e2 e2)))))
(assert (or (not (= (op (op e2 e2) e2) e2)) (= (op e2 (op (op e2 e2) e2)) (op (op (op e2 e2) e2) (op (op e2 e2) e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))
  (=
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2)))
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))
  (=
    (op (op (op (op e2 e2) e2) e2) (op (op e2 e2) e2))
    (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))
  (= (op e2 (op (op e2 e2) e2)) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))
  (= (op (op e2 e2) (op (op e2 e2) e2)) (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))
  (= (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op e2 e2))) (op (op (op e2 e2) e2) (op (op e2 e2) e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))
  (=
    (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op e2 e2)))
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))
  (=
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2))
    (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (or
  (= (op (op (op e2 e2) e2) e2) (op (op (op (op e2 e2) e2) (op e2 e2)) e2))
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))
  (= (op (op (op e2 e2) e2) (op (op e2 e2) e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))))
(assert (or
  (not (= e2 (op e2 e2)))
  (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) e2))))
(assert (or (not (= e2 (op e2 e2))) (= (op (op (op (op e2 e2) e2) e2) e2) (op (op (op (op e2 e2) e2) e2) (op e2 e2)))))
(assert (or (not (= e2 (op e2 e2))) (= (op e2 (op e2 e2)) (op e2 e2))))
(assert (or (not (= e2 (op e2 e2))) (= (op (op e2 e2) e2) (op (op e2 e2) (op e2 e2)))))
(assert (or (not (= e2 (op e2 e2))) (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2))))
(assert (or
  (not (= e2 (op e2 e2)))
  (= (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or (not (= e2 (op e2 e2))) (= (op e2 (op (op (op e2 e2) e2) e2)) (op (op e2 e2) (op (op (op e2 e2) e2) e2)))))
(assert (or (not (= e2 (op e2 e2))) (= (op (op e2 e2) e2) (op e2 e2))))
(assert (or (not (= e2 (op e2 e2))) (= (op e2 (op e2 e2)) (op (op e2 e2) (op e2 e2)))))
(assert (or (not (= e2 (op e2 e2))) (= (op (op e2 e2) (op (op e2 e2) e2)) (op e2 (op (op e2 e2) e2)))))
(assert (or (not (= e2 (op e2 e2))) (= (op (op e2 e2) (op e2 e2)) (op e2 e2))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)))
  (=
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2)))
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)))
  (= (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) (op e2 e2))) (op (op (op (op e2 e2) e2) e2) (op e2 e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)))
  (= (op e2 (op e2 e2)) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)))
  (= (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))) (op (op e2 e2) (op e2 e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)))
  (= (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op e2 e2))) (op (op (op e2 e2) e2) (op e2 e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)))
  (=
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2)))
    (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)))
  (= (op (op e2 e2) (op (op (op e2 e2) e2) e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)))
  (= (op (op e2 e2) e2) (op (op (op (op e2 e2) e2) (op e2 e2)) e2))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)))
  (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)) (op (op e2 e2) (op e2 e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)))
  (= (op (op e2 e2) (op (op e2 e2) e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) e2) e2))
  (= (op (op (op (op e2 e2) e2) (op e2 e2)) e2) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) e2) e2))
  (= (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2)) (op (op (op (op e2 e2) e2) e2) e2))))
(assert (or (not (= (op (op (op e2 e2) e2) e2) e2)) (= (op e2 (op (op (op e2 e2) e2) e2)) (op e2 e2))))
(assert (or (not (= (op (op (op e2 e2) e2) e2) e2)) (= (op (op e2 e2) e2) (op (op e2 e2) (op (op (op e2 e2) e2) e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) e2) e2))
  (= (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) e2) e2))
  (= (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) (op e2 e2))) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or
  (not (= (op (op (op e2 e2) e2) e2) e2))
  (= (op e2 (op (op (op e2 e2) e2) e2)) (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (or (not (= (op (op (op e2 e2) e2) e2) e2)) (= (op (op (op (op e2 e2) e2) e2) e2) (op e2 e2))))
(assert (or (not (= (op (op (op e2 e2) e2) e2) e2)) (= (op e2 (op e2 e2)) (op (op (op (op e2 e2) e2) e2) (op e2 e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) e2) e2))
  (= (op e2 (op (op e2 e2) e2)) (op (op (op (op e2 e2) e2) e2) (op (op e2 e2) e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) e2))
  (=
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2)))
    (op (op (op (op e2 e2) e2) (op e2 e2)) e2))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) e2))
  (= (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) (op e2 e2))) (op (op (op (op e2 e2) e2) e2) e2))))
(assert (or (not (= (op (op (op e2 e2) e2) (op e2 e2)) e2)) (= (op e2 e2) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) e2))
  (= (op (op e2 e2) e2) (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) e2))
  (= (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op e2 e2))) (op (op (op e2 e2) e2) e2))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) e2))
  (=
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2)))
    (op e2 (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) e2))
  (= (op e2 (op (op (op e2 e2) e2) e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))))
(assert (or (not (= (op (op (op e2 e2) e2) (op e2 e2)) e2)) (= (op (op (op (op e2 e2) e2) (op e2 e2)) e2) (op e2 e2))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) e2))
  (= (op e2 (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)))))
(assert (or
  (not (= (op (op (op e2 e2) e2) (op e2 e2)) e2))
  (= (op e2 (op (op e2 e2) e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))))
(assert (or
  (=
    (op (op (op e2 e2) e2) (op (op e2 e2) e2))
    (op (op (op (op e2 e2) e2) (op (op e2 e2) e2)) (op (op (op e2 e2) e2) (op (op e2 e2) e2))))
  (not (= (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op (op e2 e2) e2))))))
(assert (or
  (=
    (op
      (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2))
      (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2)))
    (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2)))
  (not (= (op (op (op e2 e2) e2) e2) (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2))))))
(assert (or
  (=
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2)))
    (op
      (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2)))
      (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2)))))
  (not
    (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2)))))))
(assert true)
(assert (= (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op (op e2 e2) e2)))))
(assert (= (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op e2 e2))) (op e2 e2)))
(assert (= e2 (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2))))
(assert (= (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (=
  (op (op (op e2 e2) e2) (op e2 e2))
  (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (= (op (op e2 e2) e2) (op (op e2 e2) (op (op e2 e2) (op (op e2 e2) e2)))))
(assert (= (op (op e2 e2) (op (op e2 e2) (op e2 e2))) (op e2 e2)))
(assert (= (op (op e2 e2) (op (op e2 e2) e2)) e2))
(assert (= (op (op (op e2 e2) e2) e2) (op (op e2 e2) (op (op e2 e2) (op (op (op e2 e2) e2) e2)))))
(assert (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (= (op e2 (op e2 (op (op e2 e2) e2))) (op (op e2 e2) e2)))
(assert (= (op e2 (op e2 (op e2 e2))) (op e2 e2)))
(assert (= (op e2 (op e2 e2)) e2))
(assert (= (op (op (op e2 e2) e2) e2) (op e2 (op e2 (op (op (op e2 e2) e2) e2)))))
(assert (= (op (op (op e2 e2) e2) (op e2 e2)) (op e2 (op e2 (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (= (op (op e2 e2) e2) (op (op (op (op e2 e2) e2) e2) (op (op (op (op e2 e2) e2) e2) (op (op e2 e2) e2)))))
(assert (= (op (op (op (op e2 e2) e2) e2) (op (op (op (op e2 e2) e2) e2) (op e2 e2))) (op e2 e2)))
(assert (= (op (op (op (op e2 e2) e2) e2) (op (op (op (op e2 e2) e2) e2) e2)) e2))
(assert (=
  (op (op (op e2 e2) e2) e2)
  (op (op (op (op e2 e2) e2) e2) (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (=
  (op (op (op e2 e2) e2) (op e2 e2))
  (op (op (op (op e2 e2) e2) e2) (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (=
  (op (op e2 e2) e2)
  (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))))
(assert (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2))) (op e2 e2)))
(assert (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) e2)) e2))
(assert (=
  (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))
  (op (op (op e2 e2) e2) e2)))
(assert (=
  (op (op (op e2 e2) e2) (op e2 e2))
  (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (=
  (op (op (op e2 e2) e2) (op (op e2 e2) e2))
  (op (op (op (op e2 e2) e2) (op (op e2 e2) e2)) (op (op (op e2 e2) e2) (op (op e2 e2) e2)))))
(assert (= (op (op (op e2 e2) (op e2 e2)) (op (op e2 e2) (op e2 e2))) (op (op e2 e2) (op e2 e2))))
(assert (= (op (op e2 e2) (op e2 e2)) (op e2 e2)))
(assert (=
  (op
    (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2))
    (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2)))
  (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2))))
(assert (=
  (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2)))
  (op
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2)))
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (not (= (op (op e2 e2) (op (op e2 e2) e2)) (op (op (op e2 e2) e2) (op (op e2 e2) e2)))))
(assert (not (= (op e2 (op (op e2 e2) e2)) (op (op (op e2 e2) e2) (op (op e2 e2) e2)))))
(assert (not (= (op (op (op e2 e2) e2) (op (op e2 e2) e2)) (op (op (op (op e2 e2) e2) e2) (op (op e2 e2) e2)))))
(assert (not (= (op (op (op e2 e2) e2) (op (op e2 e2) e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))))
(assert (not (= (op (op e2 e2) (op (op e2 e2) e2)) (op e2 (op (op e2 e2) e2)))))
(assert (not (= (op (op e2 e2) (op (op e2 e2) e2)) (op (op (op (op e2 e2) e2) e2) (op (op e2 e2) e2)))))
(assert (not (= (op (op e2 e2) (op (op e2 e2) e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))))
(assert (not (= (op e2 (op (op e2 e2) e2)) (op (op (op (op e2 e2) e2) e2) (op (op e2 e2) e2)))))
(assert (not (= (op e2 (op (op e2 e2) e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))))
(assert (not
  (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)) (op (op (op (op e2 e2) e2) e2) (op (op e2 e2) e2)))))
(assert (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) (op e2 e2)))))
(assert (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op e2 (op e2 e2)))))
(assert (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op (op e2 e2) e2) e2) (op e2 e2)))))
(assert (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)))))
(assert (not (= (op e2 (op e2 e2)) (op (op e2 e2) (op e2 e2)))))
(assert (not (= (op (op e2 e2) (op e2 e2)) (op (op (op (op e2 e2) e2) e2) (op e2 e2)))))
(assert (not (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)) (op (op e2 e2) (op e2 e2)))))
(assert (not (= (op e2 (op e2 e2)) (op (op (op (op e2 e2) e2) e2) (op e2 e2)))))
(assert (not (= (op e2 (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)))))
(assert (not (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)) (op (op (op (op e2 e2) e2) e2) (op e2 e2)))))
(assert (not (= (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2))))
(assert (not (= (op (op (op e2 e2) e2) e2) (op e2 e2))))
(assert (not (= (op (op (op e2 e2) e2) e2) (op (op (op (op e2 e2) e2) e2) e2))))
(assert (not (= (op (op (op e2 e2) e2) e2) (op (op (op (op e2 e2) e2) (op e2 e2)) e2))))
(assert (not (= (op (op e2 e2) e2) (op e2 e2))))
(assert (not (= (op (op e2 e2) e2) (op (op (op (op e2 e2) e2) e2) e2))))
(assert (not (= (op (op e2 e2) e2) (op (op (op (op e2 e2) e2) (op e2 e2)) e2))))
(assert (not (= (op (op (op (op e2 e2) e2) e2) e2) (op e2 e2))))
(assert (not (= (op (op (op (op e2 e2) e2) (op e2 e2)) e2) (op e2 e2))))
(assert (not (= (op (op (op (op e2 e2) e2) (op e2 e2)) e2) (op (op (op (op e2 e2) e2) e2) e2))))
(assert (not (= (op (op e2 e2) (op (op (op e2 e2) e2) e2)) (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (not (= (op e2 (op (op (op e2 e2) e2) e2)) (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (not
  (= (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2)) (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (not
  (=
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2))
    (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (not (= (op e2 (op (op (op e2 e2) e2) e2)) (op (op e2 e2) (op (op (op e2 e2) e2) e2)))))
(assert (not (= (op (op e2 e2) (op (op (op e2 e2) e2) e2)) (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (not
  (= (op (op e2 e2) (op (op (op e2 e2) e2) e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))))
(assert (not (= (op e2 (op (op (op e2 e2) e2) e2)) (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (not (= (op e2 (op (op (op e2 e2) e2) e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))))
(assert (not
  (=
    (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2))
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))))
(assert (not
  (= (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op e2 e2))) (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (not (= (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op e2 e2))) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (not
  (=
    (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op e2 e2)))
    (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (not
  (=
    (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op e2 e2)))
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (not (= (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (not
  (=
    (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) (op e2 e2)))
    (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (not
  (=
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2)))
    (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (not
  (= (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) (op e2 e2))) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (not
  (=
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2)))
    (op e2 (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (not
  (=
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2)))
    (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op (op e2 e2) e2)))))
(assert (not (= (op (op (op e2 e2) e2) (op (op e2 e2) e2)) (op (op (op e2 e2) e2) e2))))
(assert (not (= (op (op (op e2 e2) e2) (op (op e2 e2) e2)) (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (not (= (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op e2 e2))) (op (op (op e2 e2) e2) (op (op e2 e2) e2)))))
(assert (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2))))
(assert (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (not (= (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op e2 e2))) (op (op (op e2 e2) e2) (op e2 e2)))))
(assert (not (= (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (not (= (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op e2 e2))) (op (op (op e2 e2) e2) e2))))
(assert (not
  (= (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op e2 e2))) (op (op (op e2 e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (not (= (op (op e2 e2) (op (op e2 e2) e2)) (op (op e2 e2) (op e2 e2)))))
(assert (not (= (op (op e2 e2) e2) (op (op e2 e2) (op (op e2 e2) e2)))))
(assert (not (= (op (op e2 e2) (op (op e2 e2) e2)) (op (op e2 e2) (op (op (op e2 e2) e2) e2)))))
(assert (not (= (op (op e2 e2) (op (op e2 e2) e2)) (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (not (= (op (op e2 e2) e2) (op (op e2 e2) (op e2 e2)))))
(assert (not (= (op (op e2 e2) (op (op (op e2 e2) e2) e2)) (op (op e2 e2) (op e2 e2)))))
(assert (not (= (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))) (op (op e2 e2) (op e2 e2)))))
(assert (not (= (op (op e2 e2) e2) (op (op e2 e2) (op (op (op e2 e2) e2) e2)))))
(assert (not (= (op (op e2 e2) e2) (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (not (= (op (op e2 e2) (op (op (op e2 e2) e2) e2)) (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (not (= (op e2 (op e2 e2)) (op e2 (op (op e2 e2) e2)))))
(assert (not (= (op e2 (op (op e2 e2) e2)) (op e2 e2))))
(assert (not (= (op e2 (op (op (op e2 e2) e2) e2)) (op e2 (op (op e2 e2) e2)))))
(assert (not (= (op e2 (op (op e2 e2) e2)) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (not (= (op e2 (op e2 e2)) (op e2 e2))))
(assert (not (= (op e2 (op (op (op e2 e2) e2) e2)) (op e2 (op e2 e2)))))
(assert (not (= (op e2 (op e2 e2)) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (not (= (op e2 (op (op (op e2 e2) e2) e2)) (op e2 e2))))
(assert (not (= (op e2 e2) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (not (= (op e2 (op (op (op e2 e2) e2) e2)) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (not (= (op (op (op (op e2 e2) e2) e2) (op (op e2 e2) e2)) (op (op (op (op e2 e2) e2) e2) (op e2 e2)))))
(assert (not (= (op (op (op (op e2 e2) e2) e2) (op (op e2 e2) e2)) (op (op (op (op e2 e2) e2) e2) e2))))
(assert (not
  (= (op (op (op (op e2 e2) e2) e2) (op (op e2 e2) e2)) (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (not
  (=
    (op (op (op (op e2 e2) e2) e2) (op (op e2 e2) e2))
    (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (not (= (op (op (op (op e2 e2) e2) e2) e2) (op (op (op (op e2 e2) e2) e2) (op e2 e2)))))
(assert (not (= (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2)) (op (op (op (op e2 e2) e2) e2) (op e2 e2)))))
(assert (not
  (= (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) (op e2 e2))) (op (op (op (op e2 e2) e2) e2) (op e2 e2)))))
(assert (not (= (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2)) (op (op (op (op e2 e2) e2) e2) e2))))
(assert (not (= (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) (op e2 e2))) (op (op (op (op e2 e2) e2) e2) e2))))
(assert (not
  (=
    (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) (op e2 e2)))
    (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2)))))
(assert (not
  (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))))
(assert (not (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) e2))))
(assert (not
  (=
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2))
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))))
(assert (not
  (=
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2)))
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))))
(assert (not (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) e2))))
(assert (not
  (=
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2))
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))))
(assert (not
  (=
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2)))
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)))))
(assert (not
  (= (op (op (op (op e2 e2) e2) (op e2 e2)) e2) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))))
(assert (not
  (=
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2)))
    (op (op (op (op e2 e2) e2) (op e2 e2)) e2))))
(assert (not
  (=
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2)))
    (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))))
(assert (not (= (op (op e2 e2) e2) e2)))
(assert (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2))))
(assert (not (= e2 (op e2 e2))))
(assert (not (= (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2))))
(assert (not (= (op (op (op e2 e2) e2) e2) e2)))
(assert (not (= (op (op (op e2 e2) e2) (op e2 e2)) e2)))
(assert (= (op (op e2 e2) e2) (op (op (op e2 e2) e2) (op (op e2 e2) e2))))
(assert (= e2 (op (op (op (op e2 e2) e2) (op e2 e2)) e2)))
(assert (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op (op e2 e2) e2) e2) e2)))
(assert (= (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) (op e2 e2))) e2))
(assert (= (op (op (op e2 e2) e2) e2) (op (op (op (op e2 e2) e2) e2) (op (op (op e2 e2) e2) e2))))
(assert (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) (op (op (op e2 e2) e2) e2))))
(assert (or
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))))
  (= (op (op (op e2 e2) e2) e2) (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or
  (= (op e2 (op (op e2 e2) e2)) (op (op (op e2 e2) e2) e2))
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op e2 (op (op e2 e2) e2)))))
(assert (or
  (= (op e2 (op (op (op e2 e2) e2) e2)) (op (op (op e2 e2) e2) (op e2 e2)))
  (= (op e2 (op (op (op e2 e2) e2) e2)) (op (op e2 e2) e2))))
(assert (or
  (= (op (op e2 e2) e2) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))
  (= (op (op (op e2 e2) e2) e2) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (= (op (op (op (op e2 e2) e2) e2) (op (op e2 e2) e2)) (op e2 e2)))
(assert (= (op (op e2 e2) e2) (op (op (op (op e2 e2) e2) e2) (op e2 e2))))
(assert (or
  (= (op (op (op e2 e2) e2) e2) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))
  (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)) (op e2 e2))
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))))
(assert (or
  (= (op (op e2 e2) e2) (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)))
  (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)) (op (op (op e2 e2) e2) e2))))
(assert (or
  (= (op (op e2 e2) e2) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))
  (= (op e2 e2) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))))
(assert (or
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2))))
  (= (op (op e2 e2) e2) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2))))
  (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2))) (op (op (op e2 e2) e2) e2))))
(assert (or
  (= (op (op (op (op e2 e2) e2) e2) (op (op e2 e2) e2)) (op e2 e2))
  (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)) (op e2 e2))))
(assert (or
  (= (op (op (op e2 e2) e2) e2) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))
  (= (op e2 (op (op e2 e2) e2)) (op (op (op e2 e2) e2) e2))))
(assert (or
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op e2 (op (op e2 e2) e2)))
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))))
(assert (or
  (= (op (op e2 e2) e2) (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)))
  (= (op (op e2 e2) e2) (op (op (op (op e2 e2) e2) e2) (op e2 e2)))))
(assert (= (op (op (op e2 e2) e2) e2) (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2)))))
(assert (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)) (op (op (op e2 e2) e2) e2)))
(assert (or
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))))
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) (op (op (op e2 e2) e2) e2)))))
(assert (or
  (= (op (op e2 e2) e2) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))
  (= (op e2 (op (op (op e2 e2) e2) e2)) (op (op e2 e2) e2))))
(assert (or
  (= (op e2 (op (op e2 e2) e2)) (op (op (op e2 e2) e2) e2))
  (= (op (op (op e2 e2) e2) e2) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or
  (= (op e2 (op (op (op e2 e2) e2) e2)) (op (op (op e2 e2) e2) (op e2 e2)))
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op e2 (op (op e2 e2) e2)))
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or
  (= (op (op e2 e2) e2) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))
  (= (op e2 (op (op (op e2 e2) e2) e2)) (op (op e2 e2) e2))))
(assert (= (op e2 e2) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2))))
(assert (or
  (= (op e2 (op (op (op e2 e2) e2) e2)) (op (op (op e2 e2) e2) (op e2 e2)))
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) (op (op (op e2 e2) e2) e2)))
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))))
(assert (or
  (= (op (op e2 e2) e2) (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)))
  (= (op (op e2 e2) e2) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))
  (= (op (op e2 e2) e2) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or
  (= (op (op e2 e2) e2) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))
  (= (op (op e2 e2) e2) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or
  (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)) (op e2 e2))
  (= (op e2 e2) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))))
(assert (or
  (= (op (op (op e2 e2) e2) e2) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))
  (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)) (op (op (op e2 e2) e2) e2))
  (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2))) (op (op (op e2 e2) e2) e2))))
(assert (or
  (= (op (op (op e2 e2) e2) e2) (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))))
  (= (op (op (op e2 e2) e2) e2) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))
  (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2))) (op (op (op e2 e2) e2) e2))))
(assert (or
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2))))
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)))
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))))
(assert (or
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))))
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))
  (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (or
  (=
    (op (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2)) (op (op (op e2 e2) e2) (op e2 e2)))
    (op (op (op e2 e2) e2) e2))
  (= (op (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2))) (op e2 e2))
  (=
    (op (op e2 e2) e2)
    (op (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)) (op (op (op e2 e2) e2) (op e2 e2))))
  (=
    (op (op (op e2 e2) e2) (op e2 e2))
    (op
      (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2)))
      (op (op (op e2 e2) e2) (op e2 e2))))))
(assert (= (op (op (op e2 e2) e2) (op e2 e2)) (op e2 (op (op (op e2 e2) e2) (op e2 e2)))))
(assert (not
  (and
    (= (op (op (op (op e2 e2) e2) e2) (op (op e2 e2) e2)) (op e2 e2))
    (= (op (op (op (op e2 e2) e2) (op e2 e2)) (op e2 e2)) (op (op (op e2 e2) e2) e2))
    (= (op (op (op e2 e2) e2) e2) (op (op e2 e2) (op (op (op e2 e2) e2) (op e2 e2))))
    (= (op e2 (op (op e2 e2) e2)) (op (op (op e2 e2) e2) e2))
    (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) (op (op (op e2 e2) e2) e2)))
    (= (op (op (op e2 e2) e2) (op e2 e2)) (op e2 (op (op (op e2 e2) e2) (op e2 e2))))
    (= (op (op e2 e2) e2) (op (op (op (op e2 e2) e2) e2) (op e2 e2)))
    (= (op (op e2 e2) e2) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) (op e2 e2))))
    (= (op e2 (op (op (op e2 e2) e2) e2)) (op (op e2 e2) e2))
    (= (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op e2 e2) e2)))
    (= (op e2 e2) (op (op (op (op e2 e2) e2) (op e2 e2)) (op (op (op e2 e2) e2) e2))))))
(check-sat)
(exit)
